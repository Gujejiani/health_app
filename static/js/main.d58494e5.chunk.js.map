{"version":3,"sources":["Containers/Meal/Meal.module.css","Containers/Weight/Weight.module.css","Containers/Login/Login.js","Ui/Heder/Heder.js","Ui/Button/Button.js","store/actions/actionTypes.js","store/actions/auth.js","Components/Input/Input.js","Ui/Spiner/Spiner.js","Containers/Registration/Registration.js","store/actions/registered.js","Containers/Profile/Profile.js","Components/DatePicker/DatePicker.js","assets/img/can.JPG","Containers/Weight/Weight.js","Components/Table/Table.js","Containers/Meal/Meal.js","Containers/Activity/Activity.js","Containers/Dashboard/Dashboard.js","App.js","serviceWorker.js","store/reducers/reducer.js","store/reducers/auth.js","index.js","Containers/Activity/Activity.module.css","Ui/Heder/heder.module.css","Containers/Profile/Profile.module.css","Containers/Registration/Registration.module.css","Containers/Dashboard/Dashboard.module.css","Containers/Login/Login.module.css","Components/Table/Table.module.css","Ui/Button/Button.module.css","Ui/Spiner/Spiner.module.css"],"names":["module","exports","form","heder","props","className","classes","Heder","to","Logo","Flex","token","link","Login","onClick","logout","Register","Button","disabled","ButtonOf","clicked","type","REGISTRATION_COMMIT","USER_REGISTRATION_START","USER_REGISTERED_FAIL","USER_REGISTERED_SUCCES","USER_LOG_OUT","USER_LOGIN_SUCCES","registrationStart","actionTypes","registrationFail","error","auth","email","password","isLogined","userInfo","dispatch","authData","axios","post","then","response","idToken","userId","registrationSucces","data","localId","console","log","localStorage","setItem","JSON","stringify","catch","message","login","loginSucces","input","label","required","onChange","change","placeholder","value","style","spiner","Loader","name","weight","meal","activity","Registration","state","formControls","touched","valid","validation","minLength","maxLength","formIsValid","loading","formInputHandler","event","formIdentifer","target","updatedForm","updatedFormElement","checkValidity","inputIdentifier","setState","submitHandler","preventDefault","onRegistrationStart","onSubmit","userRegistered","prewState","rules","isValid","trim","length","test","formElementArray","inputValues","this","push","id","config","map","values","Input","InputValid","InputNotValid","e","Spiner","errorMessage","Succes","setTimeout","Section","Hide","ErorMessage","Container","Component","connect","reducer","actions","emailHandler","passwordHandler","loginStart","history","isLogedin","Background","action","Profile","logOut","parse","getItem","ViewerBack","MobileAlign","Flexarea","FlexBox","Active","Dashboard","datePicker","selected","startDate","currentWeight","Weight","date","Date","newDate","inputArray","count","dateHandler","dateObj","month","getUTCMonth","day","getUTCDate","newdate","getUTCFullYear","inputHandler","array","deleteHandler","updatedInputArray","filter","x","storageSubmittedHandler","desiredWeight","parseInt","key","TableHolder","span","Green","Red","alt","Img","src","h1","labels","Show","Save","table","Table","class","distance","val","Last","cl","visibility","click","Cancel","IMG","totalCalories","desiredMeal","Meal","calories","nameHandler","caloriesHandler","Spans","Total","totalCl","desiredActivity","Activity","km","selectHandler","measure","activityCl","Select","defaultValue","totalActCalories","Array","from","inputedData","visib","Math","random","findOutHandler","App","exact","path","component","Dashborad","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d58494e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Meal_Background__wBWKD\",\"Img\":\"Meal_Img__1yYKJ\",\"Container\":\"Meal_Container__3pnQw\",\"Date\":\"Meal_Date__2Qzgr\",\"Show\":\"Meal_Show__2249o\",\"TableHolder\":\"Meal_TableHolder__2cn56\",\"Spans\":\"Meal_Spans__1-EVz\",\"span\":\"Meal_span__qlgDM\",\"Green\":\"Meal_Green__2Y-7I\",\"Red\":\"Meal_Red__3TzED\",\"labels\":\"Meal_labels__YXurO\",\"Save\":\"Meal_Save__1i99-\",\"Select\":\"Meal_Select__2fhL8\",\"Hide\":\"Meal_Hide__3z---\",\"Total\":\"Meal_Total__1XdYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Weight_Background__i0zbD\",\"Img\":\"Weight_Img__1uzNz\",\"Container\":\"Weight_Container__1sAwt\",\"Date\":\"Weight_Date__2eZnO\",\"Show\":\"Weight_Show__2V9lS\",\"TableHolder\":\"Weight_TableHolder__1z2T8\",\"span\":\"Weight_span__TB21n\",\"Green\":\"Weight_Green__3-Lzr\",\"Red\":\"Weight_Red__2LoLH\",\"labels\":\"Weight_labels__27Ppp\",\"Save\":\"Weight_Save__1BOeh\"};","import React, { Component } from 'react'\r\nimport Heder from '../../Ui/Heder/Heder'\r\nimport classes from './Login.module.css'\r\nimport Button from '../../Ui/Button/Button'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport * as action from '../../store/actions/index'\r\nimport Spiner from '../../Ui/Spiner/Spiner'\r\n\r\n\r\n\r\nlet form\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        spiner: false\r\n    }\r\n\r\n\r\n    state = {\r\n        email: null,\r\n        password: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.isLogedin) {\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    emailHandler = (e) => {\r\n        let email = this.state.email\r\n        email = e.target.value\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n    passwordHandler = (e) => {\r\n        let password = this.state.email\r\n        password = e.target.value\r\n\r\n        this.setState({\r\n            password: password\r\n        })\r\n    }\r\n\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        this.props.registrationStart()\r\n\r\n        this.props.loginStart(this.state.email, this.state.password)\r\n\r\n\r\n\r\n        if (form !== <Spiner /> && this.props.token) {\r\n            this.props.history.push('/health-app/profile')\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        form = (\r\n            <div className={classes.Container} >\r\n                <form onSubmit={this.submitHandler} >\r\n                    <label  >Email</label>\r\n                    <input onChange={this.emailHandler} type=\"email\" />\r\n                    <label>Password</label>\r\n                    <input onChange={this.passwordHandler} type=\"password\" />\r\n                    <Button />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n        if (this.props.loading) {\r\n\r\n            form = <Spiner />\r\n        }\r\n\r\n        let errorMessage = null\r\n        if (this.props.error && !this.props.idToken) {\r\n            errorMessage = (\r\n                <h1>{this.props.error}</h1>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Heder token={this.props.token} />\r\n                <div className={classes.Background} >\r\n\r\n                    {errorMessage}\r\n                    <div className={this.props.loading ? classes.Spiner : null}>\r\n\r\n\r\n                        {form}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {this.props.token ? <Redirect to=\"./profile\" /> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLogined: state.auth.isLogined,\r\n        loading: state.auth.loading,\r\n        token: state.auth.idToken,\r\n        error: state.auth.error\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginStart: (email, password, isLogedin) => dispatch(action.login(email, password, isLogedin)),\r\n        registrationStart: () => dispatch(action.registrationStart())\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport classes from './heder.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst heder = (props) => {\r\n  return (\r\n    <div>\r\n\r\n      <div className={classes.Heder} >\r\n        <Link to=\"/profile\" ><label className={classes.Logo} >  C <span>{\"&\"} </span> H</label></Link>\r\n        <nav>\r\n          <ul className={classes.Flex} >\r\n\r\n\r\n            {props.token ? <Link to=\"/health-app/profile\" className={classes.link} ><li className={classes.Login} >Profile</li> </Link> : <Link to=\"/health-app/\" className={classes.link} ><li className={classes.Login} >Login</li> </Link>}\r\n\r\n\r\n            {props.token ? <Link to=\"/health-app/\" className={classes.link} >     <li onClick={props.logout} className={classes.Register} >Log Out</li></Link> : <Link to=\"/health-app/registration\" className={classes.link} >     <li className={classes.Register} >Register</li></Link>}\r\n   \r\n          </ul>\r\n        </nav>\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default heder;","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button  =(props) =>{\r\n    let button \r\n    if(props.disabled){\r\n       button =  <button className={classes.ButtonOf} onClick={props.clicked} disabled={props.disabled} type='submit' >Submit</button>\r\n    }else{\r\n            button = <button className={classes.Button} onClick={props.clicked} disabled={props.disabled} type='submit' >Submit</button>\r\n    }\r\n    \r\n return button\r\n}\r\nexport default Button","\r\n\r\nexport const REGISTRATION_COMMIT = \"REGISTRATION_COMMIT\"\r\n\r\n\r\nexport const USER_REGISTRATION_START = \"USER_REGISTRATION_START\"\r\nexport const USER_REGISTERED_FAIL = \"USER_REGISTERED_FAIL\"\r\nexport const USER_REGISTERED_SUCCES = \"USER_REGISTERED_SUCCES\"\r\nexport const USER_LOG_OUT = \"USER_LOG_OUT\"\r\nexport const USER_LOGIN_SUCCES = \"USER_LOGIN_SUCCES\"\r\n\r\nexport const WeightIdata = \"WeightIdata\"\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const registrationStart = () => {\r\n    return {\r\n        type: actionTypes.USER_REGISTRATION_START,\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.USER_LOG_OUT\r\n    }\r\n\r\n}\r\n\r\nexport const registrationFail = (error) => {\r\n    return {\r\n        type: actionTypes.USER_REGISTERED_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const registrationSucces = (idToken, userId, isLogined) => {\r\n    return {\r\n        type: actionTypes.USER_REGISTERED_SUCCES,\r\n        idToken: idToken,\r\n        userId: userId,\r\n        isLogined: isLogined\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const auth = (email, password, isLogined, userInfo) => {\r\n    return dispatch => {\r\n\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDtcZLSWw_TZoY8QK4JGl1bx-9cBg-TBHA'\r\n\r\n        // if(!isLogined){\r\n        //     url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDtcZLSWw_TZoY8QK4JGl1bx-9cBg-TBHA'\r\n        // }\r\n\r\n        axios.post(url, authData).then(response => {\r\n            dispatch(registrationSucces(response.data.idToken, response.data.localId, isLogined))\r\n            console.log(response)\r\n            localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n\r\n        })\r\n            .catch(error => {\r\n                dispatch(registrationFail(error.response.data.error.message))\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginSucces = (idToken, userId, isLogined) => {\r\n    return {\r\n        type: actionTypes.USER_LOGIN_SUCCES,\r\n        idToken: idToken,\r\n        userId: userId,\r\n        isLogined: isLogined\r\n    }\r\n}\r\n\r\nexport const login = (email, password, isLogined) => {\r\n    return dispatch => {\r\n\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        // if(!isLogined){\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDtcZLSWw_TZoY8QK4JGl1bx-9cBg-TBHA'\r\n\r\n\r\n        axios.post(url, authData).then(response => {\r\n            dispatch(loginSucces(response.data.idToken, response.data.localId, isLogined))\r\n            console.log(response)\r\n\r\n        })\r\n            .catch(error => {\r\n                dispatch(registrationFail(error.response.data.error.message))\r\n            })\r\n\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\n\r\n\r\nconst input = (props) =>{\r\n    return ( \r\n    <div>\r\n        <label>{props.label}</label>\r\n    <input  required={props.required} onChange={props.change}\r\n     type={props.type} placeholder={props.placeholder}\r\n      value={props.value} className={props.style}  />)\r\n      </div>\r\n    )\r\n    }\r\n\r\nexport default input","import React from 'react'\r\nimport classes from './Spiner.module.css'\r\n\r\nconst spiner =()=>{\r\n    return(\r\n        <div className={classes.Loader}>...Loading</div>\r\n    )\r\n}\r\n\r\nexport default spiner","import React, { Component } from 'react';\r\nimport Heder from \"../../Ui/Heder/Heder\";\r\nimport classes from './Registration.module.css'\r\nimport Button from '../../Ui/Button/Button'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\nimport Input from '../../Components/Input/Input'\r\nimport Spiner from '../../Ui/Spiner/Spiner'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nlet userInfo = {\r\n    name: null,\r\n    email: null,\r\n    password: null,\r\n    weight: null,\r\n    meal: null,\r\n    activity: null,\r\n    token: null,\r\n\r\n}\r\n\r\n\r\nclass Registration extends Component {\r\n    state = {\r\n        formControls: {\r\n            name: {\r\n                type: 'text',\r\n                required: true,\r\n                label: 'Name',\r\n                placeholder: 'enter Name',\r\n                value: '',\r\n                touched: false,\r\n                valid: false,\r\n                validation: {\r\n                    minLength: 1,\r\n                    maxLength: 16,\r\n                },\r\n\r\n            },\r\n\r\n\r\n            email: {\r\n                type: 'email',\r\n                required: true,\r\n                label: 'Email',\r\n                placeholder: 'enter Email',\r\n                value: '',\r\n                touched: false,\r\n                valid: false,\r\n                validation: {\r\n                    maxLength: 30,\r\n                    minLength: 6,\r\n                },\r\n\r\n\r\n            },\r\n            password: {\r\n                type: 'password',\r\n                required: true,\r\n                label: 'Password',\r\n                value: '',\r\n                touched: false,\r\n                valid: false,\r\n                validation: {\r\n\r\n\r\n                    maxLength: 30,\r\n                    minLength: 6,\r\n                }\r\n\r\n            },\r\n            weight: {\r\n                type: 'number',\r\n                required: true,\r\n                label: 'Desired Weight',\r\n                placeholder: 'enter Weight',\r\n                value: '',\r\n                touched: false,\r\n                valid: false,\r\n                validation: {\r\n\r\n                    maxLength: 3,\r\n                    minLength: 1,\r\n                },\r\n\r\n            },\r\n            meal: {\r\n                type: 'number',\r\n                required: true,\r\n                label: 'Desired meal Calories per day',\r\n                placeholder: 'enter activity calories',\r\n                value: '',\r\n                touched: false,\r\n                valid: false,\r\n                validation: {\r\n\r\n                    maxLength: 5,\r\n                    minLength: 1,\r\n                },\r\n\r\n            },\r\n            activity: {\r\n                type: 'number',\r\n                required: true,\r\n                label: 'Desired activity Calories per day',\r\n                placeholder: 'enter meal calories',\r\n                value: '',\r\n                touched: false,\r\n                valid: false,\r\n                validation: {\r\n\r\n\r\n                    maxLength: 5,\r\n                    minLength: 1,\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n        formIsValid: false,\r\n        loading: true,\r\n        isLogined: false,\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    formInputHandler = (event, formIdentifer) => {  //cloning state and than changeing it  umutable way\r\n        userInfo[formIdentifer] = event.target.value\r\n        userInfo.token = this.props.token\r\n        const updatedForm = {\r\n            ...this.state.formControls\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedForm[formIdentifer]\r\n        }\r\n\r\n\r\n\r\n        updatedFormElement.value = event.target.value\r\n\r\n        updatedFormElement.touched = true\r\n\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedForm[formIdentifer] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedForm) {\r\n            formIsValid = updatedForm[inputIdentifier].valid && formIsValid;\r\n\r\n        }\r\n\r\n\r\n        this.setState({ formControls: updatedForm, formIsValid: formIsValid })\r\n\r\n\r\n    }\r\n\r\n    submitHandler = (event) => {    //takeing form submiting values to the reducer state\r\n        event.preventDefault()\r\n\r\n        this.props.onRegistrationStart()\r\n\r\n\r\n\r\n        this.props.onSubmit(userInfo); // giving data tu reducer\r\n\r\n        this.props.userRegistered(this.state.formControls.email.value, this.state.formControls.password.value, this.state.isLogined, userInfo);\r\n\r\n        this.setState((prewState) => ({\r\n            isLogined: !prewState.isLogined\r\n        }))\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    checkValidity(value, rules) { //checking form validations\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.email) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.password) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const formElementArray = []\r\n\r\n        for (let inputValues in this.state.formControls) {\r\n\r\n            formElementArray.push({\r\n                id: inputValues,\r\n                config: this.state.formControls[inputValues]\r\n\r\n            });\r\n\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.submitHandler} >\r\n                {formElementArray.map(values => (\r\n\r\n                    <Input style={values.config.valid ? classes.InputValid : classes.InputNotValid} change={(e) => this.formInputHandler(e, values.id)} key={values.id}\r\n                        required={values.config.required}\r\n                        placeholder={values.config.placeholder}\r\n                        label={values.config.label}\r\n                        type={values.config.type} />\r\n\r\n                ))}\r\n                <Button disabled={!this.state.formIsValid} />\r\n            </form>\r\n\r\n        )\r\n\r\n        if (this.props.loading) {\r\n            form = <Spiner />\r\n        }\r\n\r\n        let errorMessage = null\r\n        if (this.props.error && !this.props.idToken) {\r\n            errorMessage = this.props.error\r\n\r\n        }\r\n\r\n        if (this.props.error === \"EMAIL_EXISTS\") {\r\n            errorMessage = \"Sorry this Email is already Exists, please Sign In\"\r\n\r\n        }\r\n        if (this.props.userId) {\r\n            errorMessage = <span className={classes.Succes}> {\"Registration complited, Please Login\"}</span>\r\n        }\r\n\r\n        setTimeout(() => {\r\n            console.log('bum')\r\n            errorMessage = null\r\n        }, 10)\r\n        return (\r\n            <div>\r\n                <Heder />\r\n                <section className={classes.Section} >\r\n                    <h1 className={this.props.userId ? classes.Hide : null} > Please Regiser to join</h1>\r\n                    <p className={classes.ErorMessage}>{errorMessage} </p>\r\n                    <div className={this.props.userId ? classes.Hide : classes.Container}  >\r\n\r\n                        {form}\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </section>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.reducer.userInfo,\r\n        loading: state.auth.loading,\r\n        token: state.auth.idToken,\r\n        error: state.auth.error,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmit: (userInfo) => dispatch(actions.formSubmited(userInfo)),\r\n        onRegistrationStart: (loading) => dispatch(actions.registrationStart(loading)),\r\n\r\n        userRegistered: (email, password, isLogined, userInfo) => dispatch(actions.auth(email, password, isLogined, userInfo))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration)\r\n\r\n","  import * as actionTypes from './actionTypes'\r\n\r\nexport const formSubmited =(userInfo)=>{\r\n    return{\r\n        type: actionTypes.REGISTRATION_COMMIT,\r\n        userInfo: userInfo,\r\n    }\r\n\r\n    }\r\n    ","import React, { Component } from 'react'\r\nimport classes from './Profile.module.css'\r\nimport Heder from '../../Ui/Heder/Heder'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    logOut = () => {\r\n\r\n        this.props.logout()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const data = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n\r\n        return (\r\n            <div  >\r\n\r\n\r\n                <Heder logout={this.logOut} token={this.props.token} />\r\n\r\n                <div className={classes.Container} >\r\n\r\n                    <div className={classes.ViewerBack}>\r\n                        <div className={classes.MobileAlign} >\r\n                            <h3>UserName: {data.name}</h3>\r\n                            <p> Desired Weight: {data.weight} kg </p>\r\n                            <p> Desired Meal Calories per day: {data.meal} cl </p>\r\n                            <p> Desired Activity Calories per day: {data.activity} cl </p>\r\n                            <div className={classes.Flexarea} >\r\n                                <div className={classes.FlexBox}>\r\n                                    <NavLink className={classes.Active} to=\"/health-app/weight\" > <h2>Weight</h2></NavLink>\r\n                                    <NavLink className={classes.Active} to='/health-app/activity'  ><h2>Activity</h2></NavLink>\r\n                                    <NavLink className={classes.Active} to='/health-app/meal'>  <h2>Meal</h2></NavLink>\r\n\r\n\r\n                                </div>\r\n                                <div className={classes.Dashboard}>\r\n                                    <NavLink to='/health-app/profile/dashboard'  >  <h1>Dashboard</h1></NavLink>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.idToken\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst datePicker = (props) =>{\r\n    return(\r\n        <DatePicker className={props.style} selected={ props.startDate} onChange={props.change} />\r\n    )\r\n}\r\n\r\nexport default datePicker","export default __webpack_public_path__ + \"static/media/can.d5e82e57.JPG\";","\r\nimport React, { Component } from 'react';\r\nimport classes from './Weight.module.css'\r\nimport Heder from '../../Ui/Heder/Heder'\r\nimport * as actions from '../../store/actions/index'\r\nimport DataPicker from '../../Components/DatePicker/DatePicker'\r\nimport Button from '../../Ui/Button/Button'\r\nimport { connect } from 'react-redux'\r\nimport Img from '../../assets/img/can.JPG'\r\n\r\n\r\nlet label = null\r\nlet id = 0\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet currentWeight = null\r\n\r\nclass Weight extends Component {\r\n\r\n    state = {\r\n        date: new Date(),\r\n        newDate: null,\r\n        weight: null,\r\n        inputArray: [],\r\n        count: 0,\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    dateHandler = (date) => {\r\n        let dateObj = null\r\n        dateObj = date\r\n\r\n        //getting from dateObject only year day and month\r\n        var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n        var day = dateObj.getUTCDate();\r\n        var year = dateObj.getUTCFullYear();\r\n\r\n        let newdate = year + \"/\" + month + \"/\" + day;\r\n\r\n        this.setState({ newDate: newdate })\r\n\r\n        this.setState({ date: date })\r\n\r\n\r\n\r\n    }\r\n\r\n    logOut = () => {\r\n\r\n        this.props.logout()\r\n    }\r\n\r\n\r\n    inputHandler = (e) => {\r\n        let weight = e.target.value;\r\n        this.setState({ weight: weight })\r\n\r\n\r\n    }\r\n\r\n\r\n    submitHandler = (e) => {\r\n\r\n\r\n\r\n        e.preventDefault()\r\n\r\n\r\n\r\n        const array = this.state.inputArray\r\n\r\n        id += 1\r\n        array.push({\r\n            id: id,\r\n            date: this.state.newDate,\r\n            weight: this.state.weight\r\n        })\r\n\r\n\r\n\r\n        this.setState({ inputArray: array })\r\n\r\n        this.setState(prewState => {\r\n            return {\r\n                count: prewState.count + 1\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    deleteHandler = (e) => {\r\n\r\n\r\n        const inputArray = this.state.inputArray\r\n        const updatedInputArray = inputArray.filter(x => x.id !== e) //deleting clicked input from the state\r\n\r\n\r\n\r\n\r\n        this.setState({ inputArray: updatedInputArray })\r\n\r\n\r\n        this.setState(prewState => {\r\n            return {\r\n                count: prewState.count - 1\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    storageSubmittedHandler = () => {\r\n        currentWeight = this.state.inputArray\r\n\r\n        localStorage.setItem('currentWeight', JSON.stringify(currentWeight))\r\n\r\n    }\r\n\r\n    render() {\r\n        let data = {\r\n            weight: 70\r\n        }\r\n        let desiredWeight = parseInt(data.weight)\r\n        if (localStorage.getItem('userInfo')) {\r\n            data = JSON.parse(localStorage.getItem('userInfo'))\r\n            desiredWeight = data.weight\r\n        }\r\n\r\n\r\n\r\n        label = (\r\n            <div>\r\n                {this.state.inputArray.map(key => (\r\n\r\n                    key.date && key.weight ?\r\n                        <div className={classes.TableHolder} key={key.id} ><span className={classes.span} >Date:    {key.date} </span>  Weight: <span key={key.id + 3} className={parseInt(key.weight) <= desiredWeight ? classes.Green : classes.Red} > {key.weight} kg  </span>   <img alt=\"\" onClick={() => this.deleteHandler(key.id)} className={classes.Img} src={Img} /> </div> : null //mapping date and weight values\r\n\r\n                ))}\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Heder logout={this.logOut} token={this.props.token} />\r\n\r\n                <h1 className={classes.h1} >Enter the form to see the list</h1>\r\n                <div className={classes.Background}>\r\n                    <div className={classes.Container}>\r\n\r\n                        <form onSubmit={this.submitHandler} >\r\n\r\n                            <label className={classes.labels} >Date</label>\r\n                            <DataPicker style={classes.Date} startDate={this.state.date} change={date => this.dateHandler(date)} />\r\n\r\n                            <label className={classes.labels}  >Weight</label>\r\n                            <input placeholder=\"Enter Your Weight\" type='number' onChange={this.inputHandler} />\r\n\r\n                            <Button disabled={this.state.count < 4 && this.state.newDate && this.state.weight ? false : true} />\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                    {this.state.count > 0 ? <div className={classes.Show}>\r\n\r\n                        {label}\r\n\r\n                        {this.state.count === 0 ? null : <button onClick={this.storageSubmittedHandler} className={classes.Save} type=\"button\" >Save</button>}\r\n\r\n                        {this.state.count < 4 ? null : <p>Please remove older Weight</p>}\r\n                    </div> : null}\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.idToken\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout()),\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weight)","import React from 'react'\r\nimport classes from './Table.module.css'\r\nimport IMG from '../../assets/img/can.JPG'\r\nconst table = (props) => {\r\n    return (\r\n        <div   >\r\n            <div className={classes.Table}>\r\n                <span>  {props.date}</span>   <span>{props.type}</span> <span className={props.class} > {props.distance} {props.val}  </span> <span className={classes.Last} className={props.style}  > {props.cl} cl</span>\r\n\r\n\r\n            </div>\r\n            <div className={props.visibility}  >\r\n                <img alt=\"\" onClick={props.click} className={classes.Cancel} src={IMG} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default table","import React, { Component } from 'react'\r\nimport classes from './Meal.module.css'\r\nimport { connect } from 'react-redux'\r\nimport Heder from '../../Ui/Heder/Heder'\r\nimport * as actions from '../../store/actions/index'\r\nimport DataPicker from '../../Components/DatePicker/DatePicker'\r\nimport Button from '../../Ui/Button/Button'\r\nimport Table from '../../Components/Table/Table'\r\n\r\nlet meal = []\r\nlet table = null\r\nlet id = 0\r\nlet totalCalories = 0;\r\n\r\n\r\n\r\n\r\n\r\nlet data = {\r\n    meal: 90\r\n}\r\n\r\nlet desiredMeal = parseInt(data.meal)\r\n\r\nclass Meal extends Component {\r\n    state = {\r\n        date: new Date(),\r\n        newDate: null,\r\n        name: null,\r\n        calories: null,\r\n        inputArray: [],\r\n        count: 0,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (localStorage.getItem('userInfo')) {\r\n            data = JSON.parse(localStorage.getItem('userInfo')) //geting data from local storage\r\n            desiredMeal = parseInt(data.meal)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //counting burned calories  from kilometres\r\n\r\n\r\n\r\n\r\n    dateHandler = (date) => {\r\n        let dateObj = null\r\n        dateObj = date\r\n\r\n        //getting from dateObject only year day and month\r\n        var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n        var day = dateObj.getUTCDate();\r\n        var year = dateObj.getUTCFullYear();\r\n\r\n        let newdate = year + \"/\" + month + \"/\" + day;\r\n\r\n        this.setState({ newDate: newdate })\r\n\r\n        this.setState({ date: date })\r\n\r\n\r\n\r\n    }\r\n\r\n    logOut = () => {\r\n\r\n        this.props.logout()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        let calories = parseInt(this.state.calories)\r\n\r\n        totalCalories = totalCalories + calories  //sum of the calories\r\n        const array = this.state.inputArray\r\n\r\n        id += 1\r\n        array.push({\r\n            id: id,\r\n            date: this.state.newDate,\r\n            name: this.state.name,\r\n            calories: this.state.calories,\r\n            totalCalories: totalCalories\r\n        })\r\n\r\n\r\n        this.setState({ inputArray: array })\r\n\r\n        this.setState(prewState => {\r\n            return {\r\n                count: prewState.count + 1\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    deleteHandler = (e, calories) => {\r\n\r\n\r\n        totalCalories = totalCalories - calories\r\n\r\n\r\n\r\n        const inputArray = this.state.inputArray\r\n\r\n\r\n\r\n        const updatedInputArray = inputArray.filter(x => x.id !== e) //deleting clicked input from the state\r\n\r\n        this.setState({ inputArray: updatedInputArray })\r\n        this.setState(prewState => {\r\n            return {\r\n                count: prewState.count - 1\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    storageSubmittedHandler = () => {\r\n\r\n\r\n        meal.push({\r\n            date: this.state.newDate,\r\n            meal: totalCalories\r\n        })\r\n\r\n\r\n        localStorage.setItem('totalMealCalories', JSON.stringify(totalCalories))\r\n        localStorage.setItem('totalMeal', JSON.stringify(meal))\r\n\r\n    }\r\n\r\n    nameHandler = (e) => {\r\n        let name = null\r\n        name = e.target.value\r\n        this.setState({ name: name })\r\n\r\n    }\r\n    caloriesHandler = (e) => {\r\n        let calories = null;\r\n        calories = e.target.value;\r\n        this.setState({ calories: calories })\r\n\r\n    }\r\n\r\n    render() {\r\n        table = (\r\n            <div>\r\n                {this.state.inputArray.map(key => (\r\n\r\n                    key.name && key.calories ?\r\n                        <Table date={key.date} type={key.name} cl={key.calories} key={key.id} distance={key.calories} val={'cl'} class={desiredMeal >= totalCalories ? classes.Green : classes.Red} click={() => this.deleteHandler(key.id, key.calories)} style={classes.Hide} /> : null\r\n\r\n\r\n                ))}\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Heder logout={this.logOut} token={this.props.token} />\r\n                <h1 className={classes.h1} >Enter the form to list Your Meals</h1>\r\n\r\n                <div className={classes.Background}>\r\n                    <div className={classes.Container}>\r\n\r\n                        <form onSubmit={this.submitHandler} >\r\n\r\n                            <label className={classes.labels} >Date</label>\r\n                            <DataPicker style={classes.Date} startDate={this.state.date} change={date => this.dateHandler(date)} />\r\n\r\n\r\n\r\n\r\n\r\n                            <label className={classes.labels}  >name of food</label>\r\n                            <input placeholder=\"Enter food name \" type='text' onChange={this.nameHandler} />\r\n                            <label className={classes.labels}  >meal calories</label>\r\n                            <input placeholder=\"Enter calories \" type='number' onChange={this.caloriesHandler} />\r\n\r\n\r\n                            <Button disabled={this.state.count < 4 && this.state.calories && this.state.name && this.state.newDate ? false : true} />\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                    {this.state.count > 0 ? <div className={classes.Show}>\r\n                        {this.state.count > 0 ? <div className={classes.Spans} >\r\n                            <span>Date </span> <span>Name</span><span> Calories</span>\r\n                        </div> : null}\r\n                        {table}\r\n\r\n                        {this.state.count === 0 ? null : <button onClick={this.storageSubmittedHandler} className={classes.Save} type=\"button\" >Save</button>}\r\n                        {this.state.count > 0 ? <div className={classes.Total}>\r\n                            <label>Desired {desiredMeal} cl </label>\r\n                            <label >total {totalCalories} cl</label>\r\n                        </div> : null}\r\n                    </div> : null}\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.idToken\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Meal)\r\n\r\n","import React, { Component } from 'react'\r\nimport classes from './Activity.module.css'\r\nimport { connect } from 'react-redux'\r\nimport Heder from '../../Ui/Heder/Heder'\r\nimport * as actions from '../../store/actions/index'\r\nimport DataPicker from '../../Components/DatePicker/DatePicker'\r\nimport Button from '../../Ui/Button/Button'\r\nimport Table from '../../Components/Table/Table'\r\n\r\n\r\nlet table = null\r\nlet id = 0\r\nlet totalCalories = 0;\r\nlet totalCl = []\r\n\r\n\r\nlet data = {\r\n    activity: 1200\r\n}\r\n\r\n\r\nlet desiredActivity = data.activity\r\n\r\nclass Activity extends Component {\r\n    state = {\r\n        date: new Date(),\r\n        newDate: null,\r\n        type: null,\r\n        km: null,\r\n        calories: null,\r\n        inputArray: [],\r\n        count: 0,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (localStorage.getItem('userInfo')) {\r\n            data = JSON.parse(localStorage.getItem('userInfo')) //geting data from local storage\r\n            desiredActivity = parseInt(data.meal)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    //counting burned calories  from kilometres\r\n    measure(type) {\r\n        let calories = null\r\n        let km = this.state.km;\r\n\r\n        switch (type) {\r\n            case 'Swiming':\r\n                calories = km * 300;\r\n                return (\r\n                    this.setState({ calories: calories })\r\n                )\r\n            case 'Hiking':\r\n                calories = km * 40;\r\n                return (\r\n                    this.setState({ calories: calories })\r\n                )\r\n            case 'Running':\r\n                calories = km * 140;\r\n                return (\r\n                    this.setState({ calories: calories })\r\n                )\r\n\r\n\r\n            default:\r\n                return calories\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    dateHandler = (date) => {\r\n        let dateObj = null\r\n        dateObj = date\r\n\r\n        //getting from dateObject only year day and month\r\n        var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n        var day = dateObj.getUTCDate();\r\n        var year = dateObj.getUTCFullYear();\r\n\r\n        let newdate = year + \"/\" + month + \"/\" + day;\r\n\r\n        this.setState({ newDate: newdate })\r\n\r\n        this.setState({ date: date })\r\n\r\n\r\n\r\n    }\r\n\r\n    logOut = () => {\r\n\r\n        this.props.logout()\r\n    }\r\n\r\n    //  selecttttttttttttttttttttt Handler\r\n    selectHandler = (e) => {\r\n        let type = e.target.value;\r\n        this.setState({ type: type })\r\n\r\n        setTimeout(() => {\r\n            this.measure(this.state.type)\r\n\r\n\r\n        }, 100)\r\n\r\n    }\r\n\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        totalCalories = totalCalories + this.state.calories //sum of the calories\r\n        const array = this.state.inputArray\r\n\r\n        id += 1\r\n        array.push({\r\n            id: id,\r\n            date: this.state.newDate,\r\n            type: this.state.type,\r\n            distance: this.state.km,\r\n            calories: this.state.calories,\r\n            totalCalories: totalCalories\r\n\r\n        })\r\n\r\n        this.setState({ inputArray: array })\r\n\r\n        this.setState(prewState => {\r\n            return {\r\n                count: prewState.count + 1\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    deleteHandler = (e, calories) => {\r\n\r\n\r\n        totalCalories = totalCalories - calories\r\n\r\n\r\n\r\n        const inputArray = this.state.inputArray\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const updatedInputArray = inputArray.filter(x => x.id !== e) //deleting clicked input from the state\r\n\r\n        this.setState({ inputArray: updatedInputArray })\r\n        this.setState(prewState => {\r\n            return {\r\n                count: prewState.count - 1\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    storageSubmittedHandler = () => {\r\n\r\n\r\n\r\n        totalCl.push({\r\n            date: this.state.newDate,\r\n            activityCl: totalCalories\r\n\r\n        })\r\n\r\n        localStorage.setItem('ACTIVITY', JSON.stringify(this.state.inputArray))\r\n        //localStorage.setItem('activity', JSON.stringify(currenActivity) )\r\n        //localStorage.setItem('totalCalories', JSON.stringify(totalCl) )\r\n\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        let km = e.target.value;\r\n\r\n        this.setState({ km: km })\r\n        setTimeout(() => {\r\n            this.measure(this.state.type)\r\n\r\n\r\n        }, 100)\r\n\r\n    }\r\n\r\n    render() {\r\n        table = (\r\n            <div>\r\n                {this.state.inputArray.map(key => (\r\n\r\n                    key.date && key.type ?\r\n                        <Table date={key.date} type={key.type} val={'km'} cl={key.calories} key={key.id} distance={key.distance} click={() => this.deleteHandler(key.id, key.calories)} style={key.calories >= desiredActivity ? classes.Green : classes.Red} /> : null\r\n\r\n\r\n                ))}\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Heder logout={this.logOut} token={this.props.token} />\r\n                <h1 className={classes.h1} >Enter the form to see the list</h1>\r\n\r\n                <div className={classes.Background}>\r\n                    <div className={classes.Container}>\r\n\r\n                        <form onSubmit={this.submitHandler} >\r\n\r\n                            <label className={classes.labels} >Date</label>\r\n                            <DataPicker style={classes.Date} startDate={this.state.date} change={date => this.dateHandler(date)} />\r\n\r\n                            <label className={classes.labels}  >Activity Type</label>\r\n\r\n\r\n                            <select className={classes.Select} placeholder=\"Enter Your Weight\" type='number' onChange={this.selectHandler} >\r\n\r\n                                <option defaultValue ></option>\r\n                                <option>Hiking</option>\r\n                                <option>Swiming</option>\r\n                                <option>Running</option>\r\n\r\n\r\n                            </select>\r\n                            <label className={classes.labels}  >Activity in Km</label>\r\n                            <input placeholder=\"Enter Km \" type='number' onChange={this.inputHandler} />\r\n\r\n\r\n                            <Button disabled={this.state.count < 4 && this.state.km && this.state.type && this.state.newDate ? false : true} />\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                    {this.state.count > 0 ? <div className={classes.Show}>\r\n                        {this.state.count > 0 ? <div className={classes.Spans} >\r\n                            <span>Date </span> <span>Type</span><span> Distance</span><span>Burned Cl</span>\r\n                        </div> : null}\r\n                        {table}\r\n\r\n                        {this.state.count === 0 ? null : <button onClick={this.storageSubmittedHandler} className={classes.Save} type=\"button\" >Save</button>}\r\n\r\n\r\n                    </div> : null}\r\n\r\n                    {this.state.count < 3 ? null : <p>Please remove older Activity</p>}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.idToken\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Activity)","import React, { Component } from 'react'\r\nimport classes from './Dashboard.module.css'\r\nimport { connect } from 'react-redux'\r\nimport Heder from '../../Ui/Heder/Heder'\r\nimport * as actions from '../../store/actions/index'\r\n//import DataPicker from '../../Components/DatePicker/DatePicker'\r\n//import Button from '../../Ui/Button/Button'\r\nimport Table from '../../Components/Table/Table'\r\n\r\n\r\nlet table = null\r\n\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n\r\n\r\n    state = {\r\n\r\n        inputArray: [],\r\n    }\r\n\r\n\r\n\r\n    logOut = () => {\r\n        this.props.logout()\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        let totalActCalories = [\r\n            { id: \"3\", date: 2020 / 20 / 20, totalCalories: 300 }\r\n        ]\r\n        let totalMeal = [{ \"date\": \"2020/10/13\", \"meal\": 700 }, { \"date\": \"2020/10/13\", \"meal\": 1121 }]\r\n\r\n\r\n        let currentWeight = [{ \"id\": 1, \"date\": \"2020/10/20\", \"weight\": \"80\" }, { \"id\": 2, \"date\": \"2020/10/21\", \"weight\": \"91\" }]\r\n\r\n        if (localStorage.getItem('ACTIVITY')) {\r\n            totalActCalories = JSON.parse(localStorage.getItem('ACTIVITY'))\r\n        }; //geting data from local storage\r\n\r\n        if (localStorage.getItem('totalMeal')) {\r\n        };\r\n\r\n        if (localStorage.getItem('currentWeight')) {\r\n            currentWeight = JSON.parse(localStorage.getItem('currentWeight'))\r\n        }\r\n\r\n\r\n        let weight = Array.from(currentWeight)\r\n        setTimeout(() => {\r\n\r\n        }, 2000)\r\n\r\n\r\n\r\n\r\n        let inputArray = []\r\n\r\n        totalActCalories.map(key => (\r\n            weight.push({\r\n                id: key.id,\r\n                activity: key.totalCalories,\r\n                date: key.date,\r\n\r\n\r\n            })\r\n\r\n        ))\r\n\r\n        totalMeal.map(key => (\r\n            weight.push({\r\n                meal: key.meal,\r\n                date: key.date\r\n            })\r\n\r\n        ))\r\n\r\n        currentWeight.map(key => (\r\n            inputArray.push({\r\n                weight: key.weight\r\n            })\r\n        ))\r\n\r\n\r\n        currentWeight.map(key => (\r\n            inputArray.push(\r\n                {\r\n                    date: key.date\r\n                })\r\n        ))\r\n\r\n        let inputedData = []\r\n\r\n\r\n        weight.map(x => {\r\n            inputedData.push({\r\n                date: x.date,\r\n                weight: x.weight,\r\n                meal: x.meal,\r\n                activity: x.activity\r\n            })\r\n        })\r\n\r\n\r\n\r\n        this.setState({\r\n            inputArray: inputedData\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    //cancel={classes.Cancel}\r\n\r\n    render() {\r\n\r\n        let id = 0\r\n        table = (\r\n            <div key={'key'} >\r\n\r\n                {this.state.inputArray.map(key => (\r\n\r\n\r\n                    <Table date={key.date} visibility={classes.visib} type={key.weight} distance={key.meal ? key.meal : 0} key={Math.random()} cl={key.activity ? key.activity : 0} val={'cl'} click={() => this.deleteHandler(key.id, key.calories)} />\r\n\r\n\r\n\r\n                ))}\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Heder logout={this.logOut} token={this.props.token} />\r\n                <div className={classes.Background}>\r\n                    <div onClick={this.findOutHandler} className={classes.Show}>\r\n                        <div className={classes.Spans} >\r\n                            <span>Date </span> <span>Weight</span><span> Meals</span> <span>Activities</span>\r\n                        </div>\r\n                        {table}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.idToken\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\r\n","import React, { Component } from 'react';\nimport Registration from './Containers/Registration/Registration';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './Containers/Login/Login';\nimport Profile from './Containers/Profile/Profile';\nimport Weight from './Containers/Weight/Weight';\nimport Meal from './Containers/Meal/Meal';\nimport Activity from './Containers/Activity/Activity';\nimport Dashborad from './Containers/Dashboard/Dashboard';\nimport { connect } from 'react-redux'\nimport './App.css'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n\n\n          {this.props.token ? <Route exact path=\"/health-app/profile\" component={Profile} /> : null}\n          {this.props.token ? <Route path=\"/health-app/profile/dashboard\" component={Dashborad} /> : null}\n          {this.props.token ? <Route path=\"/health-app/weight\" component={Weight} /> : null}\n          {this.props.token ? <Route path=\"/health-app/activity\" component={Activity} /> : null}\n          {this.props.token ? <Route path=\"/health-app/meal\" component={Meal} /> : null}\n          <Route exact path=\"/health-app/registration\" component={Registration} />\n          <Route exact component={Login} />\n          <Route exact path=\"/health-app/\" component={Login} />\n\n\n\n        </Switch>\n\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.idToken\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState ={\r\n    userInfo: {\r\n            name: null,\r\n            email: null,\r\n            password: null,\r\n            weight: null,\r\n            meal: null,\r\n            activity: null\r\n\r\n    },\r\n  \r\n    \r\n}\r\n\r\nconst reducer  = (state = initialState, action)=>{\r\n        switch (action.type) {\r\n            case actionTypes.REGISTRATION_COMMIT:\r\n                return{\r\n                    ...state,\r\n                    userInfo: action.userInfo\r\n                }\r\n              \r\n        \r\n            default:\r\n               return{\r\n                   ...state\r\n               }\r\n        }\r\n}\r\n\r\n\r\nexport default reducer\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\n\r\nconst initialState = {\r\n    idToken: null,\r\n    userId: null,\r\n    isLogined: false,\r\n    loading: false,\r\n    error: null,\r\n}\r\n\r\n\r\nconst auth = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_REGISTRATION_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case actionTypes.USER_REGISTERED_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n\r\n\r\n                loading: false,\r\n            }\r\n        // token to null\r\n        case actionTypes.USER_REGISTERED_SUCCES:\r\n            return {\r\n                ...state,\r\n                idToken: null,\r\n                userId: action.userId,\r\n                loading: false,\r\n                isLogined: !action.isLogined,\r\n                error: null,\r\n            };\r\n        case actionTypes.USER_LOG_OUT:\r\n            return {\r\n                ...state,\r\n                idToken: null,\r\n                userId: null,\r\n                isLogined: false,\r\n            }\r\n        case actionTypes.USER_LOGIN_SUCCES:\r\n            return {\r\n                ...state,\r\n                idToken: action.idToken,\r\n                userId: action.userId,\r\n                isLogined: !action.isLogined,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default auth","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport reducer from './store/reducers/reducer'\nimport { Provider } from 'react-redux'\nimport { createStore, compose, combineReducers, applyMiddleware } from 'redux'\nimport auth from './store/reducers/auth'\nimport thunk from 'redux-thunk'\n\nconst rootReducer = combineReducers({\n  reducer: reducer,\n  auth: auth,\n\n})\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\nconst app = (\n  <Provider basename={'/health-app/'} store={store} >\n    <BrowserRouter >\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Activity_Background__1IiPc\",\"Img\":\"Activity_Img__3Mn9M\",\"Container\":\"Activity_Container__1qyAW\",\"Date\":\"Activity_Date__2sdT6\",\"Show\":\"Activity_Show__3bbmW\",\"TableHolder\":\"Activity_TableHolder__DAORY\",\"Spans\":\"Activity_Spans__28j-k\",\"span\":\"Activity_span__1OkEX\",\"Green\":\"Activity_Green__1hKRR\",\"Red\":\"Activity_Red__1NO4R\",\"labels\":\"Activity_labels__1gZ6P\",\"Save\":\"Activity_Save__1l3ia\",\"Select\":\"Activity_Select__32cIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Heder\":\"heder_Heder__1GQII\",\"Login\":\"heder_Login__20mbW\",\"Register\":\"heder_Register__1qax_\",\"Flex\":\"heder_Flex__3di0e\",\"Logo\":\"heder_Logo__2dc4q\",\"link\":\"heder_link__3w-Iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Profile_Container__1CPDb\",\"Active\":\"Profile_Active__1Z95J\",\"ViewerBack\":\"Profile_ViewerBack__2SioI\",\"FlexBox\":\"Profile_FlexBox__1V827\",\"Flexarea\":\"Profile_Flexarea__QP9lL\",\"Dashboard\":\"Profile_Dashboard__1GWiA\",\"MobileAlign\":\"Profile_MobileAlign__2qk79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Registration_Section__1YYMm\",\"Container\":\"Registration_Container__26OoW\",\"InputNotValid\":\"Registration_InputNotValid__2gjBb\",\"InputValid\":\"Registration_InputValid__3HuO4\",\"ErorMessage\":\"Registration_ErorMessage__1ZX7U\",\"Succes\":\"Registration_Succes__3pPOA\",\"Hide\":\"Registration_Hide__1N5hP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Dashboard_Background__2dX7C\",\"Img\":\"Dashboard_Img__2Lpul\",\"Container\":\"Dashboard_Container__1Guuq\",\"Date\":\"Dashboard_Date__23koU\",\"Show\":\"Dashboard_Show__1cvtg\",\"TableHolder\":\"Dashboard_TableHolder__1I2Do\",\"Spans\":\"Dashboard_Spans__34aHG\",\"span\":\"Dashboard_span__2k0jf\",\"Green\":\"Dashboard_Green__2etcX\",\"Red\":\"Dashboard_Red__2IPtI\",\"labels\":\"Dashboard_labels__4Pi2d\",\"Save\":\"Dashboard_Save__2wgoU\",\"Select\":\"Dashboard_Select__On0en\",\"Hide\":\"Dashboard_Hide__2ifeh\",\"Total\":\"Dashboard_Total__3y1DR\",\"visib\":\"Dashboard_visib__RS9vv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Login_Background__ZZtPN\",\"Container\":\"Login_Container__1XQqx\",\"Spiner\":\"Login_Spiner__1OVpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__rhJYe\",\"Cancel\":\"Table_Cancel__1q--2\",\"Last\":\"Table_Last__3Frmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__257FG\",\"ButtonOf\":\"Button_ButtonOf__NDXyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spiner_Loader__IqFQ7\",\"load3\":\"Spiner_load3__2RAg_\"};"],"sourceRoot":""}